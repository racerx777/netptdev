<?php
set_time_limit(0);
ini_set('max_execution_time', '0');
ini_set('memory_limit', -1);
/*error_reporting(E_ALL);
ini_set('display_errors',true);*/

require_once  '../../../../fpdf/fpdf.php';

//function hex2dec
//returns an associative array (keys: R,G,B) from
//a hex html code (e.g. #3FE5AA)
function hex2dec($couleur = "#000000"){
    $R = substr($couleur, 1, 2);
    $rouge = hexdec($R);
    $V = substr($couleur, 3, 2);
    $vert = hexdec($V);
    $B = substr($couleur, 5, 2);
    $bleu = hexdec($B);
    $tbl_couleur = array();
    $tbl_couleur['R']=$rouge;
    $tbl_couleur['V']=$vert;
    $tbl_couleur['B']=$bleu;
    return $tbl_couleur;
}

//conversion pixel -> millimeter at 72 dpi
function px2mm($px){
    return $px*25.4/72;
}

function txtentities($html){
    $trans = get_html_translation_table(HTML_ENTITIES);
    $trans = array_flip($trans);
    return strtr($html, $trans);
}
////////////////////////////////////

class PDF_HTML extends FPDF
{
//variables of html parser
protected $B;
protected $I;
protected $U;
protected $HREF;
protected $fontList;
protected $issetfont;
protected $issetcolor;

function __construct($orientation='P', $unit='mm', $format='A4')
{
    //Call parent constructor
    parent::__construct($orientation,$unit,$format);
    //Initialization
    $this->B=0;
    $this->I=0;
    $this->U=0;
    $this->HREF='';
    $this->fontlist=array('arial', 'times', 'courier', 'helvetica', 'symbol');
    $this->issetfont=false;
    $this->issetcolor=false;
}

function WriteHTML($html)
{
    //HTML parser
    $html=strip_tags($html,"<b><u><i><a><img><p><br><strong><em><font><tr><blockquote>"); //supprime tous les tags sauf ceux reconnus
    $html=str_replace("\n",' ',$html); //remplace retour à la ligne par un espace
    $a=preg_split('/<(.*)>/U',$html,-1,PREG_SPLIT_DELIM_CAPTURE); //éclate la chaîne avec les balises
    foreach($a as $i=>$e)
    {
        if($i%2==0)
        {
            //Text
            if($this->HREF)
                $this->PutLink($this->HREF,$e);
            else
                $this->Write(5,stripslashes(txtentities($e)));
        }
        else
        {
            //Tag
            if($e[0]=='/')
                $this->CloseTag(strtoupper(substr($e,1)));
            else
            {
                //Extract attributes
                $a2=explode(' ',$e);
                $tag=strtoupper(array_shift($a2));
                $attr=array();
                foreach($a2 as $v)
                {
                    if(preg_match('/([^=]*)=["\']?([^"\']*)/',$v,$a3))
                        $attr[strtoupper($a3[1])]=$a3[2];
                }
                $this->OpenTag($tag,$attr);
            }
        }
    }
}

function OpenTag($tag, $attr)
{
    //Opening tag
    switch($tag){
        case 'STRONG':
            $this->SetStyle('B',true);
            break;
        case 'EM':
            $this->SetStyle('I',true);
            break;
        case 'B':
        case 'I':
        case 'U':
            $this->SetStyle($tag,true);
            break;
        case 'A':
            $this->HREF=$attr['HREF'];
            break;
        case 'IMG':
            if(isset($attr['SRC']) && (isset($attr['WIDTH']) || isset($attr['HEIGHT']))) {
                if(!isset($attr['WIDTH']))
                    $attr['WIDTH'] = 0;
                if(!isset($attr['HEIGHT']))
                    $attr['HEIGHT'] = 0;
                $this->Image($attr['SRC'], $this->GetX(), $this->GetY(), px2mm($attr['WIDTH']), px2mm($attr['HEIGHT']));
            }
            break;
        case 'TR':
        case 'BLOCKQUOTE':
        case 'BR':
            $this->Ln(5);
            break;
        case 'P':
            $this->Ln(10);
            break;
        case 'FONT':
            if (isset($attr['COLOR']) && $attr['COLOR']!='') {
                $coul=hex2dec($attr['COLOR']);
                $this->SetTextColor($coul['R'],$coul['V'],$coul['B']);
                $this->issetcolor=true;
            }
            if (isset($attr['FACE']) && in_array(strtolower($attr['FACE']), $this->fontlist)) {
                $this->SetFont(strtolower($attr['FACE']));
                $this->issetfont=true;
            }
            break;
    }
}

function CloseTag($tag)
{
    //Closing tag
    if($tag=='STRONG')
        $tag='B';
    if($tag=='EM')
        $tag='I';
    if($tag=='B' || $tag=='I' || $tag=='U')
        $this->SetStyle($tag,false);
    if($tag=='A')
        $this->HREF='';
    if($tag=='FONT'){
        if ($this->issetcolor==true) {
            $this->SetTextColor(0);
        }
        if ($this->issetfont) {
            $this->SetFont('arial');
            $this->issetfont=false;
        }
    }
}

function SetStyle($tag, $enable)
{
    //Modify style and select corresponding font
    $this->$tag+=($enable ? 1 : -1);
    $style='';
    foreach(array('B','I','U') as $s)
    {
        if($this->$s>0)
            $style.=$s;
    }
    $this->SetFont('',$style);
}

function PutLink($URL, $txt)
{
    //Put a hyperlink
    $this->SetTextColor(0,0,255);
    $this->SetStyle('U',true);
    $this->Write(5,$txt,$URL);
    $this->SetStyle('U',false);
    $this->SetTextColor(0);
}

}//end of cl


require_once($_SERVER['DOCUMENT_ROOT'] . '/common/session.php');
securitylevel(33);


global $html,$dbhandle,$result; 

$html ="";
if(!empty($_REQUEST['days']) || $_REQUEST['days']==0)   // number of days since last touched
	$days=$_REQUEST['days']+0;
else
	$days=60;

if(!empty($days) || $days==0) {
	$today=today();
	$daysdate = date("Y-m-d", strtotime($today . " -" . $days . " day"));
	$dbfromdate=dbDate($daysdate,'Y-m-d')." 00:00:00";

	$excludedate = date("Y-m-d",strtotime($today . " -1 day"));
	$dbexcludedate=dbDate($excludedate,'Y-m-d')." 00:00:00";
}
else {
	echo "Number of Days cannot be empty/zero.";
	exit();
}


if(isset($_REQUEST['userid'])) // If selected a user translate to queue
	$userid=$_REQUEST['userid'];
else
	unset($userid);

if(isset($_REQUEST['printnotes']))
	$printnotes=$_REQUEST['printnotes'];
else
	$printnotes='none';

if(isset($_REQUEST['mintbal']))
	$mintbal=$_REQUEST['mintbal']+0;
else
	$mintbal=0;

require_once($_SERVER['DOCUMENT_ROOT'] . '/common/user.options.php');
$tdisuser=getuser();

$where=array();

// if it is not Sunni, Vidal or constance reset user id to current user id
if (!isuserlevel(34)) {
    $userid=getuserid();
}
$queue = "";
if(!empty($userid)) {
	$userinformation=getUserInformation($userid);
	$umuser=$userinformation['umuser'];
	if(isset($umuser)) {
		$queue=getUserQueueAssignment($umuser);
//		$where[]="cqauser='$umuser'";
		$where[]="cqgroup='$queue'";
	}
}



$where[]="(ca.upddate IS NULL or ca.upddate < '$dbfromdate')";
$where[]="(ca.crtdate IS NULL or ca.crtdate < '$dbexcludedate')";
//$where[]="( cqschcalldate IS NULL OR cqschcalldate < DATE_SUB( NOW( ) , INTERVAL 1 DAY ) )";
//$where[]="tbal > $mintbal and t30+t60+t90+t120>0";
//$where[]="cqauser IS NOT NULL";

if(count($where)>0)
	$wheresql = "WHERE ".implode(' AND ', $where);

$select="
SELECT caid, cabnum, capnum, ca.crtdate crtdate, ca.upddate upddate, cqgroup, cqpriority, cqschcalldate, tbal, t30+t60+t90+t120 pastdue
FROM collection_accounts ca
LEFT JOIN collection_queue q ON caid = cqcaid
LEFT JOIN ( SELECT pnum, t30, t60, t90, t120, tbal FROM PTOS_Patients WHERE tbal>$mintbal and t30+t60+t90+t120>0 ) pat1 ON capnum=pnum
$wheresql ORDER BY cqgroup, cabnum, upddate, cqschcalldate, crtdate  LIMIT 100
";

$html .= '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />

</head>
<body>
<div style="float:right">

	<p>Days: '.$days.'</p>
</div>
<div align="center">

		<strong>Untouched Listing : '. $queue.' </strong>

</div><br>
<div class="clearformat" style="clear:both;">';

$html .= '<table border="0" cellpadding="2">';

$html .= '
	<tr >
		<td ><strong>Queue</strong></td>
		<td ><strong>#</strong></td>
		<td ><strong>Bus</strong></td>
		<td ><strong>Account</strong></td>
		<td ><strong>Pty</strong></td>
		<td ><strong>last touch Date</strong></td>
		<td ><strong>next touch Date</strong></td>
		<td ><strong>Create Date</strong></td>
		<td ><strong>Balance</strong></td>';

if($printnotes!='none') {
		$html .= '<td ><strong>Note Date</strong></td>';
		$html .= '<td ><strong>User</strong></td>';
		$html .= '<td ><strong>Button</strong></td>';
		$html .= '<td ><strong>Note</strong></td>';
}
$html .= '</tr>';
require_once($_SERVER['DOCUMENT_ROOT'] . '/config/mysql/wsptn_db.php');
$dbhandle = dbconnect();

//$pdf->writeHTML($html, true, false, true, false, '');

//$htmlnew = $html;
$reportcount=0;
$groupsaved = 0;
$i=1;
if($result=mysqli_query($dbhandle,$select)) {

	while($row=mysqli_fetch_assoc($result)) {
		
		
		$reportcount++;
		if($groupsaved == $row['cqgroup']) {
			$groupcount++;
			$groupprint=$row['cqgroup'];
		}
		else {
			$groupcount=1;
			$groupprint=$row['cqgroup'];
			$groupsaved=$row['cqgroup'];
		}

		if($bnumsaved == $row['cabnum']) {
			$bnumcount++;
			$bnumprint=$row['cabnum'];
		}
		else {
			$bnumcount=1;
			$bnumprint=$row['cabnum'];
			$bnumsaved=$row['cabnum'];
		}

		$total=$total+$row['tbal'];
		$numrows=0;
		if($printnotes!='none') {
			if($printnotes=='last') $limit="LIMIT 1";
			$notes="SELECT nopnum, nobutton, nonote, crtdate, crtuser FROM notes WHERE nopnum='".$row['capnum']."' order by crtdate desc $limit";
			if($noteresult=mysqli_query($dbhandle,$notes))
				$numrows=mysqli_num_rows($noteresult);
		}

	$html .= '<tr>
		<td >'. $groupprint.'</td>
		<td >'.$groupcount.'</td>
		<td >'.$bnumprint.'</td>
		<td >'.$row['capnum'].'</td>
		<td >'.$row['cqpriority'].'</td>
		<td >'.displayDate($row['upddate']).'</td>
		<td >'.displayDate($row['cqschcalldate']).'</td>
		<td >'.displayDate($row['crtdate']).'</td>
		<td >'.$row['tbal'].'</td>';


		if($numrows==0) { // none
			if($printnotes!='none') {

			$html .= '<td >'."&nbsp;".'</td>
			<td >'. "&nbsp;".'</td>
			<td >'. "&nbsp;".'</td>
			<td style="border: 1px solid #ccc; font-size:4px;">'. "&nbsp;".'</td>';

			}
		}
		else {
			while($noterow=mysqli_fetch_assoc($noteresult)) {

		$html .= '
			<td >'. displayDate($noterow['crtdate']).'</td>
			<td >'. $noterow['crtuser'].'</td>
			<td >'. $noterow['nobutton'].'</td>
			<td >'. $noterow['nonote'].'</td>
		';

			}
		}
		$html .= '</tr>';

		//$pdf->writeHTML($html, true, false, true, false, '');
		//$html = "";
		$i++;
	}
	
	mysqli_close($dbhandle);

	$html .= '<tr>
		<td  colspan="8" width="200">'.$reportcount.' Total Untouched</td>
		<td >'. displayCurrency($total,',','$').'</td>';


	if($printnotes!='none')
		$html .= '<td  colspan="4">&nbsp;</td>';


$html .= '</tr></table>';

}

 $pdf=new PDF_HTML();
    $pdf->SetFont('Arial','',12);
    $pdf->AddPage();
    $pdf->WriteHTML($html);
    $pdf->Output();
    exit;
//$pdf->writeHTML($html, true, false, true, false, '');
/*$pdf->Output("untouchedaccountsreport.pdf",'D');
*/
?>